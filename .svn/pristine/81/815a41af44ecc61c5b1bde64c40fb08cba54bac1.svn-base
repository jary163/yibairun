package com.yibairun.ui.activity;

import java.io.File;

import android.content.Intent;
import android.content.SharedPreferences.Editor;
import android.database.Cursor;
import android.graphics.Bitmap;
import android.graphics.BitmapFactory;
import android.net.Uri;
import android.os.Bundle;
import android.os.Environment;
import android.provider.MediaStore;
import android.util.Log;
import android.view.View;
import android.widget.Toast;

import com.android.volley.Response.ErrorListener;
import com.android.volley.Response.Listener;
import com.android.volley.VolleyError;
import com.yibairun.R;
import com.yibairun.application.AppController;
import com.yibairun.comm.Constant;
import com.yibairun.ui.components.CameraDialog;
import com.yibairun.ui.components.CameraDialog.CameraListener;
import com.yibairun.utils.BitmapUtils;
import com.yibairun.utils.UiUtil;

public class AccountManagerActivity extends BaseActivity{

	private CameraDialog calculateDialog;
	private String imgIdcardPath;
	@Override
	protected void onCreate(Bundle savedInstanceState) {
		setContentView(R.layout.activity_account_manager);
		super.onCreate(savedInstanceState);
		
	}
	
	@Override
	public void initView() {
		bar.setDisplayHomeAsUpEnabled(true);
        bar.setTitle(context.getResources().getString(R.string.account_manger));
        
		//iv_title_left = findView(R.id.iv_title_left);
		//tv_centerText = findView(R.id.tv_centerText);
		
	}
	@Override
	public void initDate() {
		//bar.hide();
		//iv_title_left.setBackgroundResource(R.drawable.back);
		//tv_centerText.setText(context.getResources().getString(R.string.account_manger));
		
		if(systemShare.getBoolean("isFirstWithDraw", false)){//TODO   需要处理
			UiUtil.getDefaultToast(context, "初次提现，请去网站完成！").show();
			Editor editor=systemShare.edit();
			editor.putBoolean("isFirstWithDraw", true);
			editor.commit();
		}
		calculateDialog = new CameraDialog(context,R.style.CalculateDialog);
	}
	@Override
	public void initListener() {
		//iv_title_left.setOnClickListener(this);
		findView(R.id.tv_modify_password).setOnClickListener(this);
		findView(R.id.tv_withdraw).setOnClickListener(this);
		findView(R.id.tv_uploadidcard).setOnClickListener(this);
        calculateDialog.setmCameraListener(new CameraListener() {
			
			@Override
			public void onPhonePicClicked() {
				getImageFromCamera();
			}
			@Override
			public void onDcimClicked() {
				getImageFromAlbum();
			}
		});
	}
	
    /**
     * 从系统相册获取照片
     */
    protected void getImageFromAlbum() {
        Intent intent = new Intent(Intent.ACTION_PICK);
        intent.setType("image/*");//相片类型
        startActivityForResult(intent, Constant.REQUEST_CODE_PICK_IMAGE);
    }
    
    /**
     * 从照相机获取
     */
    protected void getImageFromCamera() {
        String state = Environment.getExternalStorageState();
        if (state.equals(Environment.MEDIA_MOUNTED)) {
            Intent getImageByCamera = new Intent("android.media.action.IMAGE_CAPTURE");   
            startActivityForResult(getImageByCamera, Constant.REQUEST_CODE_CAPTURE_CAMEIA);
        }
        else {
            Toast.makeText(context.getApplicationContext(), "请确认已经插入SD卡", Toast.LENGTH_LONG).show();
        }
    }
	
	@Override
	public void onClick(View v) {
		super.onClick(v);
		switch (v.getId()) {
		case R.id.tv_withdraw:
            if(appController.getUserinfo().getUser().getIs_first_cash()==1) {
                Toast.makeText(context, "初次提现请到网站申请", Toast.LENGTH_SHORT).show();
            }
            else {
                startActivity(WithDrawActivity.class);
            }
			break;
		case R.id.tv_modify_password:
			Intent intent = new Intent();
			startActivity(ModifyTradePasswordActivity.class, intent);
			break;
		case R.id.tv_uploadidcard:
			calculateDialog.show();
			break;
		default:
			break;
		}
	}
	@Override
	public void onActivityResult(int requestCode, int resultCode, Intent data) {
		calculateDialog.dismiss();
		Uri uri = null;
		if (requestCode == Constant.REQUEST_CODE_PICK_IMAGE&&null!=data&&null!=data.getData()) {
			uri = data.getData();
			// to do find the path of pic by uri
			findPathFromUrl(uri);
			//BitmapUtils.compressBmpToFile(BitmapFactory.decodeFile(imgHeadPath), Constant.PIC_HEAD_PATH);
			BitmapUtils.compressBmpToFile(BitmapFactory.decodeFile(imgIdcardPath),AppController.getInstance().getIdCardSavePath());
			Log.e("main", "PICK_IMAGE_uri:"+uri);
			uploadFile(AppController.getInstance().getIdCardSavePath());
		} else if (requestCode == Constant.REQUEST_CODE_CAPTURE_CAMEIA&&data!=null&&null!=data.getExtras()) {
			uri = data.getData();
			if (uri == null) {//拍照之后获取bitmap，然后将其保存到本地
				// use bundle to get data
				Bundle bundle = data.getExtras();
				uri= data.getData();
				if (bundle != null) {
					//Bitmap photo =  BitmapUtils.compressImage((Bitmap) bundle.get("data"));// get bitmap
					Bitmap photo = (Bitmap) bundle.get("data");// get bitmap
					// spath :生成图片取个名字和路径包含类型
					BitmapUtils.compressBmpToFile(photo, AppController.getInstance().getIdCardSavePath());
				} else {
					Toast.makeText(context.getApplicationContext(), "err****",Toast.LENGTH_LONG).show();
					return;
				}
			} else {
				// to do find the path of pic by uri
				findPathFromUrl(uri);
			}
			uploadFile(AppController.getInstance().getIdCardSavePath());
		}

	}
	
	public void findPathFromUrl(Uri uri){
		if(uri==null){
			return;
		}
		String[] proj = {MediaStore.Images.Media.DATA};
		 
        //好像是android多媒体数据库的封装接口，具体的看Android文档
		Cursor cursor = context.getContentResolver().query(uri, proj, null, null, null);
        //按我个人理解 这个是获得用户选择的图片的索引值
        int column_index = cursor.getColumnIndexOrThrow(MediaStore.Images.Media.DATA);
        //将光标移至开头 ，这个很重要，不小心很容易引起越界
        cursor.moveToFirst();
        //最后根据索引值获取图片路径
        imgIdcardPath = cursor.getString(column_index);
	}
	
	/**
	 * 文件上传
	 * @param str
	 */
	public void uploadFile(final String str){
		pg.setTitle("正在上传身份证");
		pg.setCancelable(true);
		pg.show();
		File file = new File(str);
		if(file.exists()){
			api.userOperations().uploadIdCard(new Listener<String>() {

				@Override
				public void onResponse(String response) {
					pg.hide();
					Toast.makeText(context, "身份证上传成功", Toast.LENGTH_SHORT).show();
					
				}
			}, new ErrorListener() {

				@Override
				public void onErrorResponse(VolleyError error) {
					pg.hide();
					Log.e("main", "case:"+error.getCause()+"   message:"+error.getMessage());
					Toast.makeText(context, "身份证上传失败,请稍后重试", Toast.LENGTH_SHORT).show();
				}
			}, appController.getAppKey(), file);
		}else{
			Toast.makeText(context, "身份证上传失败", Toast.LENGTH_SHORT).show();
		}
		
		
	}
	
}
