package com.yibairun.receiver;

import android.annotation.TargetApi;
import android.app.Notification;
import android.app.NotificationManager;
import android.app.PendingIntent;
import android.content.BroadcastReceiver;
import android.content.Context;
import android.content.Intent;
import android.os.Build;
import android.os.Bundle;
import android.util.Log;

import com.igexin.sdk.PushConsts;
import com.igexin.sdk.PushManager;
import com.yibairun.R;
import com.yibairun.comm.Constant;
import com.yibairun.ui.activity.MainActivity;

public class GeTuiPushReceiver extends BroadcastReceiver {

	@Override
	public void onReceive(Context context, Intent intent) {
		Bundle bundle = intent.getExtras();
		Log.d("GetuiSdkDemo", "onReceive() action=" + bundle.getInt("action"));
		switch (bundle.getInt(PushConsts.CMD_ACTION)) {

		case PushConsts.GET_MSG_DATA:
			// 获取透传数据
			// String appid = bundle.getString("appid");
			byte[] payload = bundle.getByteArray("payload");
			
			String taskid = bundle.getString("taskid");
			String messageid = bundle.getString("messageid");

			// smartPush第三方回执调用接口，actionid范围为90000-90999，可根据业务场景执行
			boolean result = PushManager.getInstance().sendFeedbackMessage(context, taskid, messageid, 90001);
			System.out.println("第三方回执接口调用" + (result ? "成功" : "失败"));
			
			if (payload != null) {
				String data = new String(payload);

				Log.d("GetuiSdkDemo", "Got Payload:" + data);
			/*	if (GetuiSdkDemoActivity.tLogView != null)
					GetuiSdkDemoActivity.tLogView.append(data + "\n");*/


                Intent in = new Intent(Constant.ACTION_GEITUI_RECEIVER);
                in.putExtra(Constant.BROADCAST_IGETUI_HOMEPAGE_EXTRA,data);
                intent.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK|Intent.FLAG_ACTIVITY_CLEAR_TASK);
                context.sendBroadcast(in);
                in.setClass(context, MainActivity.class);
                sendCustomMsgNotice(context,null,in);
			}
			break;
		case PushConsts.GET_CLIENTID:
			// 获取ClientID(CID)
			// 第三方应用需要将CID上传到第三方服务器，并且将当前用户帐号和CID进行关联，以便日后通过用户帐号查找CID进行消息推送
			String cid = bundle.getString("clientid");
		/*	if (GetuiSdkDemoActivity.tView != null)
				GetuiSdkDemoActivity.tView.setText(cid);*/
			break;
		case PushConsts.THIRDPART_FEEDBACK:
			/*String appid = bundle.getString("appid");
			String taskid = bundle.getString("taskid");
			String actionid = bundle.getString("actionid");
			String result = bundle.getString("result");
			long timestamp = bundle.getLong("timestamp");

			Log.d("GetuiSdkDemo", "appid = " + appid);
			Log.d("GetuiSdkDemo", "taskid = " + taskid);
			Log.d("GetuiSdkDemo", "actionid = " + actionid);
			Log.d("GetuiSdkDemo", "result = " + result);
			Log.d("GetuiSdkDemo", "timestamp = " + timestamp);*/
			break;
		default:
			break;
		}
	}


    @TargetApi(Build.VERSION_CODES.JELLY_BEAN)
    public  void sendCustomMsgNotice(Context ctx, Bundle bundle, Intent intent) {
        NotificationManager mNotificationManager = (NotificationManager) ctx.getSystemService(Context.NOTIFICATION_SERVICE);
        PendingIntent contentIntent = PendingIntent.getActivity(ctx, (int) (intent.getLongExtra("id", 0)), intent, PendingIntent.FLAG_UPDATE_CURRENT);//当点击消息时就会向系统发送openintent意图
        Notification notification = new Notification.Builder(ctx)
                .setContentTitle("新消息")
        .setContentText("亿百润")
                .setSmallIcon(R.drawable.ico).setContentIntent(contentIntent)
                .build();
        notification.flags |= Notification.FLAG_AUTO_CANCEL;
        notification.defaults = Notification.DEFAULT_SOUND;//发出默认声音
        mNotificationManager.notify((int) (intent.getLongExtra("id", 0)), notification);
    }

}
