package com.yibairun.ui.fragment;

import android.content.Intent;
import android.os.Bundle;
import android.text.TextUtils;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.view.Window;
import android.view.WindowManager;
import android.widget.TextView;
import android.widget.Toast;

import com.android.volley.Response.ErrorListener;
import com.android.volley.Response.Listener;
import com.android.volley.VolleyError;
import com.umeng.socialize.bean.SHARE_MEDIA;
import com.umeng.socialize.controller.UMSocialService;
import com.umeng.socialize.sso.UMSsoHandler;
import com.yibairun.R;
import com.yibairun.bean.InvitationCode;
import com.yibairun.comm.Constant;
import com.yibairun.core.ShareFactory;
import com.yibairun.listener.RecommendCallBackListener;
import com.yibairun.ui.components.RecommendDialog;

public class RecommendFragment extends BaseFragment implements RecommendCallBackListener{
    private static final String ARG_SECTION_NUMBER = "section_number";
    private View rootView;
    private TextView textView;
    private UMSocialService mController;
    private String shareMessage ;
    private String shareCode;

    public static RecommendFragment newInstance(int sectionNumber) {
        RecommendFragment fragment = new RecommendFragment();
        Bundle args = new Bundle();
        args.putInt(ARG_SECTION_NUMBER, sectionNumber);
        fragment.setArguments(args);
        return fragment;
    }

    public RecommendFragment() {

    }
    @Override
    public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) {
        rootView = inflater.inflate(R.layout.fragment_recommend, container, false);
        rootView.findViewById(R.id.iv_recommend_circle).setOnClickListener(this);
        rootView.findViewById(R.id.iv_recommend_msg).setOnClickListener(this);
        rootView.findViewById(R.id.iv_recommend_quickmark).setOnClickListener(this);
        rootView.findViewById(R.id.iv_recommend_qzone).setOnClickListener(this);
        rootView.findViewById(R.id.iv_recommend_sina).setOnClickListener(this);
        rootView.findViewById(R.id.iv_recommend_tenxun_weibo).setOnClickListener(this);
        rootView.findViewById(R.id.iv_recommend_weixing).setOnClickListener(this);
        return rootView;
    }

    @Override
    public void onClick(View v) {
        super.onClick(v);
        switch (v.getId()) {
            case R.id.iv_recommend_circle:
    			share(SHARE_MEDIA.WEIXIN_CIRCLE);
                //mController = ShareFactory.getInstance().shareToFriend(getActivity(),shareMessage, "", shareMessage+"message");
                break;
            case R.id.iv_recommend_msg:
            	share(SHARE_MEDIA.SMS);
                break;
            case R.id.iv_recommend_quickmark:
                break;
            case R.id.iv_recommend_qzone:
    			share(SHARE_MEDIA.QZONE);
                break;
            case R.id.iv_recommend_sina:
    			share(SHARE_MEDIA.SINA);
				break;
            case R.id.iv_recommend_tenxun_weibo:
    			share(SHARE_MEDIA.TENCENT);
                break;
            case R.id.iv_recommend_weixing:
    			share(SHARE_MEDIA.WEIXIN);
                break;
            default:
                break;
        }
        

    }
    
    private void share(SHARE_MEDIA type){
        if(TextUtils.isEmpty(appController.getAppKey())){//未登录分享
			shareMessage = Constant.SHARE_APPEND_URL_COMPOSITE_UNLOGIN;
			jumpToDialog(type);
        	//shareToPlatForm(type);
        }else{//登录分享
        	pg.setMessage("正在获取连接邀请码，请稍后...");
        	pg.show();
        	api.productOperations().GetInviteCode(createSuccuss(type), createFail(type), appController.getAppKey());
        }
    }
    
    public void jumpToDialog(SHARE_MEDIA type){
    	RecommendDialog calculateDialog;
    	Window window ;
    	WindowManager.LayoutParams lp;
		calculateDialog = new RecommendDialog(getActivity(),R.style.CalculateDialog,type,shareMessage,this);
		window = calculateDialog.getWindow();     
		lp = window.getAttributes();     
		lp.alpha = 0.8f;     
		window.setAttributes(lp);  
		calculateDialog.show();
    }
    
    public void shareToPlatForm(SHARE_MEDIA type){
    	String shareUrl;
    	switch (type) {
		case SINA:
			mController = ShareFactory.getInstance().shareToSinaWeiBo(getActivity(), shareMessage);
			break;
		case TENCENT:
			mController = ShareFactory.getInstance().shareToTenXunWeiBo(getActivity(), shareMessage);
			break;
		case QZONE:
			mController = ShareFactory.getInstance().shareToQZone(getActivity(),shareMessage,null);
			break;
		case WEIXIN:
			if(TextUtils.isEmpty(shareCode)){
				shareUrl = Constant.SHARE_APPEND_URL_UNLOGIN;
			}else{
				shareUrl = Constant.SHARE_APPEND_URL+shareCode;
			}
			mController = ShareFactory.getInstance().shareToWeiXin(getActivity(), shareMessage, Constant.SHARE_TITLE, shareUrl);
			break;
		case WEIXIN_CIRCLE:
			if(TextUtils.isEmpty(shareCode)){
				shareUrl = Constant.SHARE_APPEND_URL_UNLOGIN;
			}else{
				shareUrl = Constant.SHARE_APPEND_URL+shareCode;
			}
			mController = ShareFactory.getInstance().shareToFriend(getActivity(),shareMessage, Constant.SHARE_TITLE, shareUrl);
			break;
		case SMS:
			mController = ShareFactory.getInstance().shareToSms(getActivity(), shareMessage);
		default:
			break;
		}
    }
    
    private Listener<InvitationCode> createSuccuss(final SHARE_MEDIA type) {
    	return new Listener<InvitationCode>() {

			@Override
			public void onResponse(InvitationCode response) {
				pg.hide();
				if(1==response.getStatus()){//表示获取到了邀请码
					Toast.makeText(getActivity(), "邀请码获取成功", Toast.LENGTH_SHORT).show();
					shareMessage = Constant.SHARE_APPEND_URL_COMPOSITE_LOGIN+response.getData();
					shareCode = response.getData();
					//shareMessage = shareMessage+" \n  "+ Constant.SHARE_APPEND_URL+response.getData();
				}else{//TODO  测试需要    表示没有获取到邀请码
					shareMessage = Constant.SHARE_APPEND_URL_COMPOSITE_UNLOGIN;
				}
				jumpToDialog(type);
			}
		};
    }
    
    private ErrorListener createFail(final SHARE_MEDIA type) {
		return new ErrorListener() {

			@Override
			public void onErrorResponse(VolleyError error) {
				pg.hide();
				shareMessage = Constant.SHARE_APPEND_URL_COMPOSITE_UNLOGIN;
				jumpToDialog(type);
				}
		};
	}
    

    
    @Override
    public void onActivityResult(int requestCode, int resultCode, Intent data) {
    	// TODO Auto-generated method stub
    	super.onActivityResult(requestCode, resultCode, data);
    	/**使用SSO授权必须添加如下代码 */
        UMSsoHandler ssoHandler = mController.getConfig().getSsoHandler(requestCode) ;
        if(ssoHandler != null){
           ssoHandler.authorizeCallBack(requestCode, resultCode, data);
        }
    }

	@Override
	public void onRecommendMsgEnter(String message,SHARE_MEDIA type) {
		shareMessage = message;
		if(TextUtils.isEmpty(message)){
			shareMessage = Constant.SHARE_APPEND_URL_COMPOSITE_UNLOGIN;
		}
		shareToPlatForm(type);
	}

}
